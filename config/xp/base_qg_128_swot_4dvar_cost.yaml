# @package _global_

paths:
    stream_fun: /Odyssey/private/s23roy/project_QG/data/4dvar/stream_function_dataset_forcing_no_t_lr_128_dt=0.0002_save_freq=1600.nc

domain: ???

trainer:
  _target_: pytorch_lightning.Trainer
  inference_mode: False
  gradient_clip_val: 0.5
  accelerator: gpu
  devices: 1
  logger: 
    _target_: pytorch_lightning.loggers.CSVLogger
    save_dir: ${hydra:runtime.output_dir}
    name: ${hydra:runtime.choices.xp}
    version: ''
  max_epochs: 500
  callbacks:
    - _target_: pytorch_lightning.callbacks.LearningRateMonitor
    - _target_: pytorch_lightning.callbacks.ModelCheckpoint
      monitor: val_mse
      save_top_k: 3
      filename: '{val_mse:.5f}-{epoch:03d}'

datamodule:
  _target_: src.data.BaseDataModule
  input_da: 
    _target_: src.utils.load_qg_data #src.utils.load_altimetry_data   # 
    path:  ${paths.stream_fun} # ${paths.natl_gf_5nads}
  domains:
    train:
      time: {_target_: builtins.slice, _args_: ['2013-02-24', '2013-09-29']}
    val: 
      time: {_target_: builtins.slice, _args_: ['2012-12-15', '2013-02-24']}
    test: 
      time: {_target_: builtins.slice,  _args_: ['2012-10-01', '2012-12-20']}
  xrds_kw:
    patch_dims: { time: 10, lat: 128, lon: 128}
    strides: { time: 1, lat: 128, lon: 128}
    domain_limits: ${domain.train}
  dl_kw: {batch_size: 4, num_workers: 1}
  aug_kw:
    aug_factor: 2
    aug_only: True

model:
  _target_: src.models.Lit4dVarNet
  persist_rw: False
  opt_fn:
    _target_: src.utils.cosanneal_lr_adam
    _partial_: true
    lr: 1e-3
    T_max: ${trainer.max_epochs}
  rec_weight:
      _target_: src.utils.get_triang_time_wei
      patch_dims: ${datamodule.xrds_kw.patch_dims}
      crop: {time: 0, lat: 0, lon: 0}
      offset: 1
  solver: 
    _target_: src.models.GradSolver
    n_step: 5
    lr_grad: 1e3
    # lr_grad: 0.2
    prior_cost: 
      _target_: src.models.BilinAEPriorCost
      dim_in: ${datamodule.xrds_kw.patch_dims.time}
      dim_hidden: 16
      fourier_modes: 32
      #bilin_quad: False
      #downsamp: 2
    obs_cost: 
      _target_: src.models.BaseObsCost
    grad_mod: 
      _target_: src.models.ConvLstmGradModel
      dim_in: ${datamodule.xrds_kw.patch_dims.time}
      dim_hidden: 48
    init_state_fn: None
  dynamical_model:
    _target_: src.dynamical_model.QG
    _partial_: True
    scale: 16
    regime: 'forcing_no_t_dep'
    Lx: 6.283185307179586  # 2 * math.pi
    Ly: 6.283185307179586  # 2 * math.pi
    Nx: 128
    Ny: 128
    dt: 0.0016  # (1.0E-4) * scale
    mu: 0.02
    nu: 1.025E-5
    t0: 0.0
    nv: 1
    B: 0
    device: "cuda"
    topography: True
    seed: 20250518

  dynamical_model_solver:
    _target_: src.dynamical_model.NODE_Block
    _partial_: True
    solver: 'rk4'
    rtol: 1e-4
    atol: 1e-4
    step_size: 1.6e-3
    adjoint: True
    autonomous: False
    num_steps: 200

    #   _target_: src.utils.warp_field_batch
    #   _partial_: True
    #   L: 5.0            # Spatial correlation length
    #   T_corr: 20.0        # Temporal correlation length
    #   sigma: 10.0       # Standard deviation of the correlated field
    #   init_type: 'perturbed'  # 'rand' or 'zero'
      
       
  test_metrics: ${metrics.test_metrics}
  pre_metric_fn: 
        _target_: xarray.Dataset.sel
        _partial_: True
        time: {_target_: builtins.slice, _args_: ["2012-10-22", "2012-12-02"]}
        lat: ${domain.test.lat}
        lon: ${domain.test.lon}

metrics:
  nrmse_scores: {_target_: src.utils.rmse_based_scores_from_ds, _partial_: True}
  psd_scores: {_target_: src.utils.psd_based_scores_from_ds, _partial_: True}
  get0: {_target_: operator.itemgetter, _args_: [0]}
  get1: {_target_: operator.itemgetter, _args_: [1]}
  test_metrics:
    'mu': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.nrmse_scores}', '${metrics.get0}']}
    'sig': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.nrmse_scores}', '${metrics.get1}']}
    'lx': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.psd_scores}', '${metrics.get0}']}
    'lt': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.psd_scores}', '${metrics.get1}']}

entrypoints:
  - _target_: pytorch_lightning.seed_everything
    seed: 333
  - _target_: src.train.base_training
    trainer: ${trainer}
    lit_mod: ${model}
    dm: ${datamodule}

defaults:
  - /domain: qg_sim_128
  - _self_

